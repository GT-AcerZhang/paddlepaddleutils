{ // block 0
    var image : fluid.VarType.LOD_TENSOR.shape(-1, 3).astype(VarType.FP32)
    var label : fluid.VarType.LOD_TENSOR.shape(-1, 1).astype(VarType.INT64)
    var label_index : fluid.VarType.LOD_TENSOR.shape(-1, 2, 2).astype(VarType.INT32)
    persist trainable param fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(3, 2).astype(VarType.FP32)
    var fc_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1, 2).astype(VarType.FP32)
    var fc_0.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1, 2).astype(VarType.FP32)
    var softmax_with_cross_entropy_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1, 2).astype(VarType.FP32)
    var softmax_with_cross_entropy_0.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1, 1).astype(VarType.FP32)
    var print_softmax_with_cross_entropy_0.tmp_1_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1, 1).astype(VarType.FP32)
    var reduce_sum_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(1,).astype(VarType.FP32)
    var print_reduce_sum_0.tmp_0_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(1,).astype(VarType.FP32)
    var fc_0.tmp_1@GRAD : fluid.VarType.LOD_TENSOR.shape(-1, 2).astype(VarType.FP32)
    var fc_0.tmp_0@GRAD : fluid.VarType.LOD_TENSOR.shape(-1, 2).astype(VarType.FP32)
    var reduce_sum_0.tmp_0@GRAD : fluid.VarType.LOD_TENSOR.shape(1,).astype(VarType.FP32)
    var softmax_with_cross_entropy_0.tmp_1@GRAD : fluid.VarType.LOD_TENSOR.shape(-1, 1).astype(VarType.FP32)
    var fc_0.w_0@GRAD : fluid.VarType.LOD_TENSOR.shape(3, 2).astype(VarType.FP32)
    persist var learning_rate_0 : fluid.VarType.LOD_TENSOR.shape(1,).astype(VarType.FP32)

    {FetchList=['fc_0.tmp_1', 'softmax_with_cross_entropy_0.tmp_1', 'reduce_sum_0.tmp_0']} = ascend_trigger(inputs={FeedList=['image', 'label', 'label_index']}, graph_idx = 1, op_device = , op_namescope = /, op_role = 0, op_role_var = [])
}

